# When an exception occurs in Quarkus REST request parameter handling code, the exception is not printed by default to the log (for security reasons)
quarkus.log.category."org.jboss.resteasy.reactive.server.handlers.ParameterHandler".level=DEBUG
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.migrate-at-start=true

quarkus.swagger-ui.title=Monotithic Ecommerce REST API

# DEV properties
%dev.quarkus.flyway.clean-at-start=true
# Debug queries
# %dev.quarkus.hibernate-orm.log.sql=true
# Preserving the database between restarts
# %dev.quarkus.hibernate-orm.database.generation=validate
# %dev.quarkus.datasource.devservices.volumes."classpath:./devdb"=/var/lib/postgresql/data
# quarkus.datasource.devservices.port=

# TEST properties
%test.quarkus.flyway.clean-at-start=true

# PROD properties
# Enable Swagger UI in production
# quarkus.swagger-ui.always-include=true
%prod.quarkus.datasource.db-kind = postgresql
# It's a good practice to use the same version of the database in development and production for leveraging the same features
%prod.quarkus.datasource.db-version = ${env.DATABASE_VERSION}
%prod.quarkus.datasource.username = ${env.DATABASE_USER}
%prod.quarkus.datasource.password = ${env.DATABASE_PASSWORD}
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://${env.DATABASE_URL}:${env.DATABASE_PORT}/${env.DATABASE_NAME}
# Just to be safe that the database won't be dropped and recreated in production
%prod.quarkus.hibernate-orm.database.generation = none
%prod.quarkus.hibernate-orm.sql-load-script = no-file